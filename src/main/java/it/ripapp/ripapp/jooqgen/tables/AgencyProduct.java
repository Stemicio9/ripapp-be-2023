/*
 * This file is generated by jOOQ.
 */
package it.ripapp.ripapp.jooqgen.tables;


import it.ripapp.ripapp.jooqgen.Keys;
import it.ripapp.ripapp.jooqgen.Public;
import it.ripapp.ripapp.jooqgen.tables.records.AgencyProductRecord;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row2;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AgencyProduct extends TableImpl<AgencyProductRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.agency_product</code>
     */
    public static final AgencyProduct AGENCY_PRODUCT = new AgencyProduct();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AgencyProductRecord> getRecordType() {
        return AgencyProductRecord.class;
    }

    /**
     * The column <code>public.agency_product.agencyid</code>.
     */
    public final TableField<AgencyProductRecord, UUID> AGENCYID = createField(DSL.name("agencyid"), SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>public.agency_product.productid</code>.
     */
    public final TableField<AgencyProductRecord, UUID> PRODUCTID = createField(DSL.name("productid"), SQLDataType.UUID.nullable(false), this, "");

    private AgencyProduct(Name alias, Table<AgencyProductRecord> aliased) {
        this(alias, aliased, null);
    }

    private AgencyProduct(Name alias, Table<AgencyProductRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.agency_product</code> table reference
     */
    public AgencyProduct(String alias) {
        this(DSL.name(alias), AGENCY_PRODUCT);
    }

    /**
     * Create an aliased <code>public.agency_product</code> table reference
     */
    public AgencyProduct(Name alias) {
        this(alias, AGENCY_PRODUCT);
    }

    /**
     * Create a <code>public.agency_product</code> table reference
     */
    public AgencyProduct() {
        this(DSL.name("agency_product"), null);
    }

    public <O extends Record> AgencyProduct(Table<O> child, ForeignKey<O, AgencyProductRecord> key) {
        super(child, key, AGENCY_PRODUCT);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<AgencyProductRecord> getPrimaryKey() {
        return Keys.AGENCY_PRODUCT_PK;
    }

    @Override
    public List<UniqueKey<AgencyProductRecord>> getKeys() {
        return Arrays.<UniqueKey<AgencyProductRecord>>asList(Keys.AGENCY_PRODUCT_PK);
    }

    @Override
    public List<ForeignKey<AgencyProductRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AgencyProductRecord, ?>>asList(Keys.AGENCY_PRODUCT__AGENCY_FK, Keys.AGENCY_PRODUCT__AGENCY_PRODUCT_PRODUCT_PRODUCTID_FK);
    }

    private transient Agency _agency;
    private transient Product _product;

    public Agency agency() {
        if (_agency == null)
            _agency = new Agency(this, Keys.AGENCY_PRODUCT__AGENCY_FK);

        return _agency;
    }

    public Product product() {
        if (_product == null)
            _product = new Product(this, Keys.AGENCY_PRODUCT__AGENCY_PRODUCT_PRODUCT_PRODUCTID_FK);

        return _product;
    }

    @Override
    public AgencyProduct as(String alias) {
        return new AgencyProduct(DSL.name(alias), this);
    }

    @Override
    public AgencyProduct as(Name alias) {
        return new AgencyProduct(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AgencyProduct rename(String name) {
        return new AgencyProduct(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AgencyProduct rename(Name name) {
        return new AgencyProduct(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
