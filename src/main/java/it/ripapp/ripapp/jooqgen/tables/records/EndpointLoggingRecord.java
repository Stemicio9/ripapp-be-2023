/*
 * This file is generated by jOOQ.
 */
package it.ripapp.ripapp.jooqgen.tables.records;


import it.ripapp.ripapp.jooqgen.tables.EndpointLogging;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EndpointLoggingRecord extends UpdatableRecordImpl<EndpointLoggingRecord> implements Record13<UUID, String, LocalDateTime, String, String, String, UUID, String, Integer, Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.endpoint_logging.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.endpoint_logging.reqid</code>.
     */
    public void setReqid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.reqid</code>.
     */
    public String getReqid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.endpoint_logging.timestamp</code>.
     */
    public void setTimestamp(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.timestamp</code>.
     */
    public LocalDateTime getTimestamp() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.endpoint_logging.method</code>.
     */
    public void setMethod(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.method</code>.
     */
    public String getMethod() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.endpoint_logging.url</code>.
     */
    public void setUrl(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.url</code>.
     */
    public String getUrl() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.endpoint_logging.querystring</code>.
     */
    public void setQuerystring(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.querystring</code>.
     */
    public String getQuerystring() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.endpoint_logging.userid</code>.
     */
    public void setUserid(UUID value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.userid</code>.
     */
    public UUID getUserid() {
        return (UUID) get(6);
    }

    /**
     * Setter for <code>public.endpoint_logging.body</code>.
     */
    public void setBody(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.body</code>.
     */
    public String getBody() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.endpoint_logging.status</code>.
     */
    public void setStatus(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.status</code>.
     */
    public Integer getStatus() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>public.endpoint_logging.executiontime</code>.
     */
    public void setExecutiontime(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.executiontime</code>.
     */
    public Integer getExecutiontime() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>public.endpoint_logging.exceptionstacktrace</code>.
     */
    public void setExceptionstacktrace(String value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.exceptionstacktrace</code>.
     */
    public String getExceptionstacktrace() {
        return (String) get(10);
    }

    /**
     * Setter for <code>public.endpoint_logging.message</code>.
     */
    public void setMessage(String value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.message</code>.
     */
    public String getMessage() {
        return (String) get(11);
    }

    /**
     * Setter for <code>public.endpoint_logging.response</code>.
     */
    public void setResponse(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.endpoint_logging.response</code>.
     */
    public String getResponse() {
        return (String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<UUID, String, LocalDateTime, String, String, String, UUID, String, Integer, Integer, String, String, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<UUID, String, LocalDateTime, String, String, String, UUID, String, Integer, Integer, String, String, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return EndpointLogging.ENDPOINT_LOGGING.ID;
    }

    @Override
    public Field<String> field2() {
        return EndpointLogging.ENDPOINT_LOGGING.REQID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return EndpointLogging.ENDPOINT_LOGGING.TIMESTAMP;
    }

    @Override
    public Field<String> field4() {
        return EndpointLogging.ENDPOINT_LOGGING.METHOD;
    }

    @Override
    public Field<String> field5() {
        return EndpointLogging.ENDPOINT_LOGGING.URL;
    }

    @Override
    public Field<String> field6() {
        return EndpointLogging.ENDPOINT_LOGGING.QUERYSTRING;
    }

    @Override
    public Field<UUID> field7() {
        return EndpointLogging.ENDPOINT_LOGGING.USERID;
    }

    @Override
    public Field<String> field8() {
        return EndpointLogging.ENDPOINT_LOGGING.BODY;
    }

    @Override
    public Field<Integer> field9() {
        return EndpointLogging.ENDPOINT_LOGGING.STATUS;
    }

    @Override
    public Field<Integer> field10() {
        return EndpointLogging.ENDPOINT_LOGGING.EXECUTIONTIME;
    }

    @Override
    public Field<String> field11() {
        return EndpointLogging.ENDPOINT_LOGGING.EXCEPTIONSTACKTRACE;
    }

    @Override
    public Field<String> field12() {
        return EndpointLogging.ENDPOINT_LOGGING.MESSAGE;
    }

    @Override
    public Field<String> field13() {
        return EndpointLogging.ENDPOINT_LOGGING.RESPONSE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getReqid();
    }

    @Override
    public LocalDateTime component3() {
        return getTimestamp();
    }

    @Override
    public String component4() {
        return getMethod();
    }

    @Override
    public String component5() {
        return getUrl();
    }

    @Override
    public String component6() {
        return getQuerystring();
    }

    @Override
    public UUID component7() {
        return getUserid();
    }

    @Override
    public String component8() {
        return getBody();
    }

    @Override
    public Integer component9() {
        return getStatus();
    }

    @Override
    public Integer component10() {
        return getExecutiontime();
    }

    @Override
    public String component11() {
        return getExceptionstacktrace();
    }

    @Override
    public String component12() {
        return getMessage();
    }

    @Override
    public String component13() {
        return getResponse();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getReqid();
    }

    @Override
    public LocalDateTime value3() {
        return getTimestamp();
    }

    @Override
    public String value4() {
        return getMethod();
    }

    @Override
    public String value5() {
        return getUrl();
    }

    @Override
    public String value6() {
        return getQuerystring();
    }

    @Override
    public UUID value7() {
        return getUserid();
    }

    @Override
    public String value8() {
        return getBody();
    }

    @Override
    public Integer value9() {
        return getStatus();
    }

    @Override
    public Integer value10() {
        return getExecutiontime();
    }

    @Override
    public String value11() {
        return getExceptionstacktrace();
    }

    @Override
    public String value12() {
        return getMessage();
    }

    @Override
    public String value13() {
        return getResponse();
    }

    @Override
    public EndpointLoggingRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord value2(String value) {
        setReqid(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord value3(LocalDateTime value) {
        setTimestamp(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord value4(String value) {
        setMethod(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord value5(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord value6(String value) {
        setQuerystring(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord value7(UUID value) {
        setUserid(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord value8(String value) {
        setBody(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord value9(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord value10(Integer value) {
        setExecutiontime(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord value11(String value) {
        setExceptionstacktrace(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord value12(String value) {
        setMessage(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord value13(String value) {
        setResponse(value);
        return this;
    }

    @Override
    public EndpointLoggingRecord values(UUID value1, String value2, LocalDateTime value3, String value4, String value5, String value6, UUID value7, String value8, Integer value9, Integer value10, String value11, String value12, String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EndpointLoggingRecord
     */
    public EndpointLoggingRecord() {
        super(EndpointLogging.ENDPOINT_LOGGING);
    }

    /**
     * Create a detached, initialised EndpointLoggingRecord
     */
    public EndpointLoggingRecord(UUID id, String reqid, LocalDateTime timestamp, String method, String url, String querystring, UUID userid, String body, Integer status, Integer executiontime, String exceptionstacktrace, String message, String response) {
        super(EndpointLogging.ENDPOINT_LOGGING);

        setId(id);
        setReqid(reqid);
        setTimestamp(timestamp);
        setMethod(method);
        setUrl(url);
        setQuerystring(querystring);
        setUserid(userid);
        setBody(body);
        setStatus(status);
        setExecutiontime(executiontime);
        setExceptionstacktrace(exceptionstacktrace);
        setMessage(message);
        setResponse(response);
    }
}
