/*
 * This file is generated by jOOQ.
 */
package it.ripapp.ripapp.jooqgen.tables.records;


import it.ripapp.ripapp.jooqgen.enums.Demisematchtype;
import it.ripapp.ripapp.jooqgen.enums.Kinship;
import it.ripapp.ripapp.jooqgen.tables.DemiseMatch;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DemiseMatchRecord extends UpdatableRecordImpl<DemiseMatchRecord> implements Record8<UUID, UUID, Demisematchtype, String, Kinship, UUID, Boolean, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.demise_match.accountid</code>.
     */
    public void setAccountid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.demise_match.accountid</code>.
     */
    public UUID getAccountid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.demise_match.demiseid</code>.
     */
    public void setDemiseid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.demise_match.demiseid</code>.
     */
    public UUID getDemiseid() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.demise_match.type</code>.
     */
    public void setType(Demisematchtype value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.demise_match.type</code>.
     */
    public Demisematchtype getType() {
        return (Demisematchtype) get(2);
    }

    /**
     * Setter for <code>public.demise_match.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.demise_match.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.demise_match.kinship</code>.
     */
    public void setKinship(Kinship value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.demise_match.kinship</code>.
     */
    public Kinship getKinship() {
        return (Kinship) get(4);
    }

    /**
     * Setter for <code>public.demise_match.cityid</code>.
     */
    public void setCityid(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.demise_match.cityid</code>.
     */
    public UUID getCityid() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>public.demise_match.notify</code>.
     */
    public void setNotify(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.demise_match.notify</code>.
     */
    public Boolean getNotify() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>public.demise_match.ts</code>.
     */
    public void setTs(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.demise_match.ts</code>.
     */
    public LocalDateTime getTs() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, UUID, Demisematchtype, String, Kinship, UUID, Boolean, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, UUID, Demisematchtype, String, Kinship, UUID, Boolean, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return DemiseMatch.DEMISE_MATCH.ACCOUNTID;
    }

    @Override
    public Field<UUID> field2() {
        return DemiseMatch.DEMISE_MATCH.DEMISEID;
    }

    @Override
    public Field<Demisematchtype> field3() {
        return DemiseMatch.DEMISE_MATCH.TYPE;
    }

    @Override
    public Field<String> field4() {
        return DemiseMatch.DEMISE_MATCH.NAME;
    }

    @Override
    public Field<Kinship> field5() {
        return DemiseMatch.DEMISE_MATCH.KINSHIP;
    }

    @Override
    public Field<UUID> field6() {
        return DemiseMatch.DEMISE_MATCH.CITYID;
    }

    @Override
    public Field<Boolean> field7() {
        return DemiseMatch.DEMISE_MATCH.NOTIFY;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return DemiseMatch.DEMISE_MATCH.TS;
    }

    @Override
    public UUID component1() {
        return getAccountid();
    }

    @Override
    public UUID component2() {
        return getDemiseid();
    }

    @Override
    public Demisematchtype component3() {
        return getType();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public Kinship component5() {
        return getKinship();
    }

    @Override
    public UUID component6() {
        return getCityid();
    }

    @Override
    public Boolean component7() {
        return getNotify();
    }

    @Override
    public LocalDateTime component8() {
        return getTs();
    }

    @Override
    public UUID value1() {
        return getAccountid();
    }

    @Override
    public UUID value2() {
        return getDemiseid();
    }

    @Override
    public Demisematchtype value3() {
        return getType();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public Kinship value5() {
        return getKinship();
    }

    @Override
    public UUID value6() {
        return getCityid();
    }

    @Override
    public Boolean value7() {
        return getNotify();
    }

    @Override
    public LocalDateTime value8() {
        return getTs();
    }

    @Override
    public DemiseMatchRecord value1(UUID value) {
        setAccountid(value);
        return this;
    }

    @Override
    public DemiseMatchRecord value2(UUID value) {
        setDemiseid(value);
        return this;
    }

    @Override
    public DemiseMatchRecord value3(Demisematchtype value) {
        setType(value);
        return this;
    }

    @Override
    public DemiseMatchRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public DemiseMatchRecord value5(Kinship value) {
        setKinship(value);
        return this;
    }

    @Override
    public DemiseMatchRecord value6(UUID value) {
        setCityid(value);
        return this;
    }

    @Override
    public DemiseMatchRecord value7(Boolean value) {
        setNotify(value);
        return this;
    }

    @Override
    public DemiseMatchRecord value8(LocalDateTime value) {
        setTs(value);
        return this;
    }

    @Override
    public DemiseMatchRecord values(UUID value1, UUID value2, Demisematchtype value3, String value4, Kinship value5, UUID value6, Boolean value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DemiseMatchRecord
     */
    public DemiseMatchRecord() {
        super(DemiseMatch.DEMISE_MATCH);
    }

    /**
     * Create a detached, initialised DemiseMatchRecord
     */
    public DemiseMatchRecord(UUID accountid, UUID demiseid, Demisematchtype type, String name, Kinship kinship, UUID cityid, Boolean notify, LocalDateTime ts) {
        super(DemiseMatch.DEMISE_MATCH);

        setAccountid(accountid);
        setDemiseid(demiseid);
        setType(type);
        setName(name);
        setKinship(kinship);
        setCityid(cityid);
        setNotify(notify);
        setTs(ts);
    }
}
